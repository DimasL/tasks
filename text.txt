Вопросы:
-------
1. Что такое ООП и главные его принцыпы?

Объектно ориентированное программирование.
Основные принципы - все состоит из объектов. Объекты принадлежат классам.
Основные парадигмы: полиморфизм, инкапсуляуия, наследование.

2. Что такое класс? Что такое объект?

Класс - сущность, которая может содержать методы и свойства.
Объект - экземпляр класса.

3. Что такое абстр.класс? Что такое интерфейс? в чем различие?

Абстрактный класс - класс, который не может иметь экземпляров. Может содержать абстрактные методы и свойства.
В отличие от классического интерфейса, абстрактный класс может иметь определённые методы, а также свойства.
Интерфейс - это набор методов, которые должны быть реализованы в классах, имплементирующих данный интерфейс. Не может содержать свойства, в отличии от абстрактного класса.
Для одного класса можно имплементировать несколько интерфейсов.

4. Можно ли унаследовать несколько классов сразу?
В PHP нет множественного наследования, однако есть Traits.

5. Что такое трейты и зачем они нужны?
Traits механизм обеспечения повторного использования кода. Замена множественному наследованию.

6. Что такое инкапсуляция? Зачем она?
Свойство системы, позволяющее объединить данные и методы, работающие с ними, в классе и скрыть детали реализации от пользователя.

7. Что означает public/protected/private у методов и свойств?
Разграничение области видимости методов и свойств.
Public - доступно снаружи класса.
Protected - доступно только внутри класса.
Private - доступно только внутри, закрыто для наследников.

8. Если не написать public/protected/private, то что это будет значить?
Это будет означать, что это свойство/метод будут восприняты как public.

9. Что такое магические методы? какие ты знаешь и зачем они?
Это методы классов, название которых начинается с "__".
__construct() | __ destruct() | __call() | __get() | __set() | __toString() | __clone()
Данные методы предназначены для определения поведения объекта при различных манипуляциях с его экземпляром.

10. Зачем нужен конструктор и деструктор?
__construct() автоматически вызывается, при создании объекта. В нем вы можете задать начальные свойства объекта.
__destruct() автоматически вызывается при удалении объекта. В нем можно удалить все, что было связано с объектом, к примеру соединение с БД.

11. Что делает приставка static для методов и свойств?
"static" позволяет вызывать метод/свойство объекта БЕЗ экземпляра класса

12. В чем разница self/static при обращении к статик свойствам/методам внутри класса?
"self" использует свойство/метод своего класса, а "static" у наследуемого.

13. Что означает абстрактный метод?
Может быть создан только в абстрактном классе.
Абстрактный метод не реализуется для класса, в котором описан, однако должен быть реализован для его неабстрактных потомков.

14. Какие шаблоны знаете? Зачем они?
Пораждающие: абстрактная фабрика, фабрика, прототип, синглтон.
Структурные: адаптер, композитный, декотатор, фасад, прокси...
Паттерн - образец, шаблон. Нужен для написания более структурированного кода, более простого и понятного для чтению.

15. Как реализовать шаблон синглентон? (словами)
Создаем класс, закрываем __construct() и __clone, создаем статическое свойство $instance равное null(к примеру), создаем статическую публичную функцию getInstance, в которой будет логика:
если $instance == null, то присваиваем ему текущий экземпляр класса "new className", и возвращаем self::$instance.

16. Как проверить, что объект экзепяр того или иного класса? как проверить поддержку интерфейса?
if($obj instanceof nameClass), if($obj instanceof nameInterface) (точно так же)

18. Что такое замыкания?
передача функции в функцию. объект типа Closure.

19. Простейшие типы в php?
int, float, bool, null, NAN, string, array, object, Resource

20. Как сделать многопоточность в php?
system()

21. Перечислите ключевые отличия между версиями PHP 5.3, 5.4, 5.5.
5.3 - замыкания,пространства имен.
5.4 - трейты, короткий синтаксис массивов "[]",
5.5 - "sTring[1] - T", "['el', 'le'][1] - le"